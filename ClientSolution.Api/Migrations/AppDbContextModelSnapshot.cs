// <auto-generated />
using ClientSolution.Api.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientSolution.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientSolution.Model.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressTypeId = 1,
                            PersonId = 1,
                            ProvinceId = 1,
                            StreetName = "157 Voortrekker rd",
                            Town = "Germiston"
                        },
                        new
                        {
                            AddressId = 2,
                            AddressTypeId = 2,
                            PersonId = 1,
                            ProvinceId = 1,
                            StreetName = "157 Voortrekker rd",
                            Town = "Germiston"
                        },
                        new
                        {
                            AddressId = 3,
                            AddressTypeId = 1,
                            PersonId = 2,
                            ProvinceId = 1,
                            StreetName = "150 West Street",
                            Town = "Sandton"
                        },
                        new
                        {
                            AddressId = 4,
                            AddressTypeId = 2,
                            PersonId = 2,
                            ProvinceId = 1,
                            StreetName = "150 West Street",
                            Town = "Sandton"
                        },
                        new
                        {
                            AddressId = 5,
                            AddressTypeId = 1,
                            PersonId = 3,
                            ProvinceId = 1,
                            StreetName = "157 Voortrekker rd",
                            Town = "Roodepoort"
                        },
                        new
                        {
                            AddressId = 6,
                            AddressTypeId = 2,
                            PersonId = 3,
                            ProvinceId = 1,
                            StreetName = "157 Voortrekker rd",
                            Town = "Roodepoort"
                        });
                });

            modelBuilder.Entity("ClientSolution.Model.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Email = "sullivans@gmail,com",
                            GenderId = 1,
                            LastName = "sullivans",
                            Name = "Sam",
                            PrimaryNumber = "01125200125",
                            SecondaryNumber = "101255225566"
                        },
                        new
                        {
                            PersonId = 2,
                            Email = "Jackson@gmail,com",
                            GenderId = 1,
                            LastName = "Jackson",
                            Name = "Peter",
                            PrimaryNumber = "0140225522144",
                            SecondaryNumber = "01325588855"
                        },
                        new
                        {
                            PersonId = 3,
                            Email = "Elize@gmail,com",
                            GenderId = 2,
                            LastName = "Elize",
                            Name = "Tania",
                            PrimaryNumber = "01255444555",
                            SecondaryNumber = "012533699555"
                        },
                        new
                        {
                            PersonId = 4,
                            Email = "Prudence@gmail,com",
                            GenderId = 2,
                            LastName = "Prudence",
                            Name = "Gordon",
                            PrimaryNumber = "01258554411",
                            SecondaryNumber = "013255899552"
                        },
                        new
                        {
                            PersonId = 5,
                            Email = "Greyling@gmail,com",
                            GenderId = 2,
                            LastName = "Greyling",
                            Name = "Brian",
                            PrimaryNumber = "012588745566",
                            SecondaryNumber = "102365889966"
                        },
                        new
                        {
                            PersonId = 6,
                            Email = "Noel@gmail,com",
                            GenderId = 1,
                            LastName = "Noel",
                            Name = "Shaun",
                            PrimaryNumber = "102255544555",
                            SecondaryNumber = "012654788999"
                        });
                });

            modelBuilder.Entity("ClientSolution.Model.Address", b =>
                {
                    b.HasOne("ClientSolution.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
